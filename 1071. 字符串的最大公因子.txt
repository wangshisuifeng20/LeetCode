对于字符串?S 和?T，只有在 S = T + ... + T（T?与自身连接 1 次或多次）时，
我们才认定?“T 能除尽 S”。

返回最长字符串?X，要求满足?X 能除尽 str1 且?X 能除尽 str2。



示例 1：

输入：str1 = "ABCABC", str2 = "ABC"
输出："ABC"

示例 2：

输入：str1 = "ABABAB", str2 = "ABAB"
输出："AB"

示例 3：

输入：str1 = "LEET", str2 = "CODE"
输出：""
?



提示：

1 <= str1.length <= 1000
1 <= str2.length <= 1000
str1[i] 和?str2[i] 为大写英文字母


class Solution {
public:
    string gcdOfStrings(string str1, string str2) {
        if(str1+str2!=str2+str1)return "";
        return (str1+str2).substr(0,gcd((int)str1.length(),(int)str2.length()));
    }
};

解法：

加速条件：字符串1和字符串2转换顺序后相等则存在最大公因子
存在最大公因子的条件下使用辗转相除法，用字符串截取函数截取出最大公因子

执行用时 :0 ms, 在所有 C++ 提交中击败了100.00%的用户
内存消耗 :9 MB, 在所有 C++ 提交中击败了88.04%的用户